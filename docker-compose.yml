networks:
  transcendance:
    driver: bridge

services:

  nginx:
    container_name: nginx
    build: ./nginx
    ports:
      - 1080:80  # Forward HTTP traffic on port 80
      - 443:443
    depends_on:
      - backend
      - frontend
    networks:
      - transcendance

  frontend:
    container_name: frontend
    build: ./front-react
    volumes:
      - frontend:/app
    depends_on:
      - backend
    networks:
      - transcendance

  backend:
    container_name: backend
    volumes:
      - backend:/app
    build: 
      context: ./backend
      args:
        DOMAIN: ${DOMAIN}
        OAUTH_UID: ${OAUTH_UID}
        OAUTH_SECRET: ${OAUTH_SECRET}
        OAUTH_CALLBACK: ${OAUTH_CALLBACK}
        DBNAME: ${DBNAME}       
        DBUSER: ${DBUSER}        
        DBPASSWORD: ${DBPASSWORD} 
    command: sh -c "python manage.py makemigrations && python manage.py migrate && daphne -b 0.0.0.0 -p 8000 backend.asgi:application"
    depends_on:
      - postgres
    networks:
      - transcendance

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: ${DBNAME}       
      POSTGRES_USER: ${DBUSER}        
      POSTGRES_PASSWORD: ${DBPASSWORD}  
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - transcendance
    
  redis:
    image: redis:alpine
    ports:
      - "7777:6379"
    networks:
      - transcendance

volumes:
  frontend:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '${VOLUME_PATH}'
  postgres_data:
    driver: local
  backend:
    driver: local